From e2410aeb9e56b3a4fcb074f7d34dc47fa0cfc361 Mon Sep 17 00:00:00 2001
From: Lars Ingebrigtsen <larsi@gnus.org>
Date: Mon, 3 Oct 2022 19:49:53 +0200
Subject: Rename to 'inhibit-automatic-native-compilation'

The following upstream patch has been backported:

  Rename to inhibit-automatic-native-compilation

  * src/comp.c (maybe_defer_native_compilation):
  (syms_of_comp):
  * lisp/startup.el (inhibit-native-compilation):
  (normal-top-level):
  * lisp/progmodes/elisp-mode.el (emacs-lisp-native-compile-and-load):
  * lisp/emacs-lisp/comp.el (comp-trampoline-compile): Rename
  inhibit-native-compilation to inhibit-automatic-native-compilation.

Origin: upstream, commit f97993ee667f9be7589825f3a4fbc095d6944ec6
Forwarded: not-needed
---
 lisp/emacs-lisp/comp.el | 2 +-
 lisp/startup.el         | 7 ++++---
 src/comp.c              | 7 ++++---
 3 files changed, 9 insertions(+), 7 deletions(-)

diff --git a/lisp/emacs-lisp/comp.el b/lisp/emacs-lisp/comp.el
index 651eaa3adc0..bdd4fc125e2 100644
--- a/lisp/emacs-lisp/comp.el
+++ b/lisp/emacs-lisp/comp.el
@@ -3813,7 +3813,7 @@ comp--trampoline-abs-filename
   "Return the absolute filename for a trampoline for SUBR-NAME."
   ;; If we've disabled nativecomp, don't write the trampolines to
   ;; the eln cache (but create them).
-  (and (not inhibit-native-compilation)
+  (and (not inhibit-automatic-native-compilation)
        (cl-loop
 	with dirs = (if (stringp native-comp-enable-subr-trampolines)
 			(list (expand-file-name native-comp-enable-subr-trampolines
diff --git a/lisp/startup.el b/lisp/startup.el
index 45e41a7c951..5f14b585390 100644
--- a/lisp/startup.el
+++ b/lisp/startup.el
@@ -546,7 +546,7 @@ startup--honor-delayed-native-compilations
   (setq comp--compilable t))
 
 (defvar native-comp-eln-load-path)
-(defvar inhibit-native-compilation)
+(defvar inhibit-automatic-native-compilation)
 (defvar native-comp-enable-subr-trampolines)
 
 (defvar startup--original-eln-load-path nil
@@ -584,7 +584,8 @@ normal-top-level
 reads the initialization files, etc.
 It is the default value of the variable `top-level'."
   ;; Allow disabling automatic .elc->.eln processing.
-  (setq inhibit-native-compilation (getenv "EMACS_INHIBIT_NATIVE_COMPILATION"))
+  (setq inhibit-automatic-native-compilation
+        (getenv "EMACS_INHIBIT_AUTOMATIC_NATIVE_COMPILATION"))
 
   (if command-line-processed
       (message internal--top-level-message)
@@ -604,7 +605,7 @@ normal-top-level
         ;; in this session.  This is necessary if libgccjit is not
         ;; available on MS-Windows, but Emacs was built with
         ;; native-compilation support.
-        (setq inhibit-native-compilation t
+        (setq inhibit-automatic-native-compilation t
               native-comp-enable-subr-trampolines nil))
 
       ;; Form `native-comp-eln-load-path'.
diff --git a/src/comp.c b/src/comp.c
index 46b81cb1aae..41078f41d52 100644
--- a/src/comp.c
+++ b/src/comp.c
@@ -5179,7 +5179,7 @@ maybe_defer_native_compilation (Lisp_Object function_name,
     return;
 
   if (!native_comp_jit_compilation
-      || !NILP (Vinhibit_native_compilation)
+      || !NILP (Vinhibit_automatic_native_compilation)
       || noninteractive
       || !NILP (Vpurify_flag)
       || !COMPILEDP (definition)
@@ -5682,12 +5682,13 @@ syms_of_comp (void)
     doc: /* Non-nil when comp.el can be native compiled.
 For internal use. */);
   /* Compiler control customizes.  */
-  DEFVAR_LISP ("inhibit-native-compilation", Vinhibit_native_compilation,
+  DEFVAR_LISP ("inhibit-automatic-native-compilation",
+	       Vinhibit_automatic_native_compilation,
 	       doc: /* If non-nil, inhibit automatic native compilation of loaded .elc files.
 
 After compilation, each function definition is updated to the native
 compiled one.  */);
-  Vinhibit_native_compilation = Qnil;
+  Vinhibit_automatic_native_compilation = Qnil;
 
   DEFVAR_BOOL ("native-comp-jit-compilation", native_comp_jit_compilation,
     doc: /* If non-nil, compile loaded .elc files asynchronously.
